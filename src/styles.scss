@import url('https://fonts.googleapis.com/css?family=Gochi+Hand|Muli:400,500,700&display=swap');
@import './styles/variables';
@import "../node_modules/bootstrap/scss/bootstrap";
@import "../node_modules/plyr/src/sass/plyr.scss";

#outlet {
  scroll-behavior: smooth;
}


body {
  overflow: hidden;
}

h2, h3, h4 {
  font-weight: 700;
}

h2 {
  font-size: 1.6em;
}

#app {
  display: flex;
  flex-direction: column;
  margin:0;
  padding:0;
  height: 100vh;
  width: 100vw;

  #outlet {
    position: relative;
    flex-grow: 1;
    overflow-x: hidden;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
  }
}

a, button {
  cursor: pointer;
}

#logo{
  font-family: 'Gochi Hand', cursive;
  font-size: 1.9em;

  &.colored {
    background: linear-gradient(#16C1E7, #1E96B0);
    background-clip: text;
    -webkit-text-fill-color: transparent;
  }
}

.text-black {
  color: rgb(33, 37, 41) !important;
}


.chip {
    margin: 5px 5px 5px 0px;
    display: inline-block;
    padding: 0 15px;
    height: 50px;
    font-size: 12px;
    line-height: 50px;
    font-weight: 600;
    border-radius: 5px;
    background-color: #DBEBF6;
  }

  .closebtn:hover {
    color: #000;
  }

// toggle switch css (copy pasta van google, meeste eruit gehaald als je nu iets weg doet werkt het nietmeer en i dont know why dus )

@mixin can-toggle-branding($can-toggle-off-color: #777,
$can-toggle-on-color: #16C1E7,
$can-toggle-inactive-text: rgba(white, 0.5),
$can-toggle-transition: cubic-bezier(0, 1, 0.5, 1)) {

input[type="checkbox"] {

  &[disabled]~label {
    color: rgba($can-toggle-off-color, 0.5);
  }

  &:focus~label,
  &:hover~label {
    .can-toggle__switch {
      background-color: $can-toggle-off-color;

      &:after {
        color: darken($can-toggle-off-color, 10%);
      }
    }
  }

  &:hover~label {
    color: darken($can-toggle-off-color, 5%);
  }

  &:checked {
    ~label {
      &:hover {
        color: darken($can-toggle-on-color, 3%);
      }

      .can-toggle__switch {
        background-color: lighten($can-toggle-on-color, 5%);

        &:after {
          color: darken($can-toggle-on-color, 5%);
        }
      }
    }

    &:focus,
    &:hover {
      ~label {
        .can-toggle__switch {
          background-color: $can-toggle-on-color;

          &:after {
            color: darken($can-toggle-on-color, 10%);
          }
        }
      }
    }
  }
}

label {

  .can-toggle__label-text {
    flex: 1;
  }

  .can-toggle__switch {
    transition: background-color 0.3s $can-toggle-transition;
    background: lighten($can-toggle-off-color, 5%);

    &:before {
      color: $can-toggle-inactive-text;
    }

    &:after {
      // Autoprefixer choked here, so making the prefixes explicit
      -webkit-transition: -webkit-transform 0.3s $can-toggle-transition;
      transition: transform 0.3s $can-toggle-transition;
      color: $can-toggle-off-color;
    }
  }

}
}

@mixin can-toggle-appearance ($can-toggle-width: 134px,
$can-toggle-height: 36px,
$can-toggle-border-radius: 4px,
$can-toggle-offset: 2px,
$can-toggle-label-font-size: 14px,
$can-toggle-switch-font-size: 12px,
$can-toggle-shadow: 0 3px 3px rgba(black, 0.4)) {
$can-toggle-switch-width: $can-toggle-width/2;

input[type="checkbox"] {

  &:focus~label,
  &:hover~label {
    .can-toggle__switch {
      &:after {
        box-shadow: $can-toggle-shadow;
      }
    }
  }

  &:checked {
    ~label {
      .can-toggle__switch {
        &:after {
          transform: translate3d($can-toggle-width - ($can-toggle-switch-width + $can-toggle-offset), 0, 0);
        }
      }
    }

    &:focus,
    &:hover {
      ~label {
        .can-toggle__switch {
          &:after {
            box-shadow: $can-toggle-shadow;
          }
        }
      }
    }
  }
}

label {
  font-size: $can-toggle-label-font-size;

  .can-toggle__switch {
    height: $can-toggle-height;
    flex: 0 0 $can-toggle-width;
    border-radius: $can-toggle-border-radius;

    &:before {
      left: $can-toggle-width/2;
      font-size: $can-toggle-switch-font-size;
      line-height: $can-toggle-height;
      width: $can-toggle-width/2;
      padding: 0 12px;
    }

    &:after {
      top: $can-toggle-offset;
      left: $can-toggle-offset;
      border-radius: $can-toggle-border-radius/2;
      width: $can-toggle-switch-width - $can-toggle-offset;
      line-height: $can-toggle-height - ($can-toggle-offset*2);
      font-size: $can-toggle-switch-font-size;
    }

    &:hover {
      &:after {
        box-shadow: $can-toggle-shadow;
      }
    }
  }
}
}

.can-toggle {
position: relative;

*,
*:before,
*:after {
  box-sizing: border-box;
}

//overflow: hidden;

input[type="checkbox"] {
  opacity: 0;
  position: absolute;
  top: 0;
  left: 0;

  &[disabled]~label {
    pointer-events: none;

    .can-toggle__switch {
      opacity: 0.4;
    }
  }

  &:checked {
    ~label {

      .can-toggle__switch {

        &:before {
          content: attr(data-unchecked);
          left: 0;
        }

        &:after {
          content: attr(data-checked);
        }
      }
    }

  }
}

label {
  user-select: none;
  position: relative;
  display: flex;
  align-items: center;

  .can-toggle__label-text {
    flex: 1;
    padding-left: 32px;
  }

  .can-toggle__switch {
    position: relative;

    &:before {
      content: attr(data-checked);
      position: absolute;
      top: 0;
      text-transform: uppercase;
      text-align: center;
    }

    &:after {
      content: attr(data-unchecked);
      position: absolute;
      z-index: 5;
      text-transform: uppercase;
      text-align: center;
      background: white;
      transform: translate3d(0, 0, 0);
    }

  }

}

// Default values for .can-toggle class
@include can-toggle-branding;
@include can-toggle-appearance;

&.can-toggle--size-large {
  @include can-toggle-appearance (300px, // Toggle width
    50px, // Toggle height
    4px, // Toggle border radius
    2px, // Offset (distance btw switch and box)
    14px, // Label font size
    14px, // Switch font size
    0 4px 4px rgba(black, 0.4) // Switch shadow on hover/focus
  );
}

}
